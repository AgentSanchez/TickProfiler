buildscript {
	repositories {
		jcenter()
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
		maven {
			name = "nallar"
			url = "https://repo.nallar.me/"
		}
	}
	if (System.getenv("GRADLE_NO_CACHE_CHANGING") != null) {
		configurations.all {
			resolutionStrategy.cacheChangingModulesFor 1, 'seconds'
			resolutionStrategy.cacheDynamicVersionsFor 1, 'seconds'
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
		classpath 'org.minimallycorrect.libloader:LibLoaderGradle:0.1-SNAPSHOT'
	}
}
apply plugin: 'org.minimallycorrect.libloader.LibLoaderGradle'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'idea'

ext.mcVersion = "1.10.2"
ext.runMcVersion = "1.10.2"
ext.forgeVersion = "12.18.1.2076"
ext.forgeMappings = "snapshot_20160518"
group = "org.minimallycorrect.tickprofiler" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "TickProfiler"

def calculateVersion() {
	def ver = project.runMcVersion
	if (System.env.BUILD_NUMBER != null)
		return ver + "-jenkins." + System.env.BUILD_NUMBER
	if (project.hasProperty("release"))
		return ver + '-' + project.release
	return ver + "-dev"
}

version = calculateVersion()

repositories {
	jcenter()
	maven { url = 'https://repo.nallar.me/' }
}

if (System.getenv("GRADLE_NO_CACHE_CHANGING") != null) {
	configurations.all {
		resolutionStrategy.cacheChangingModulesFor 1, 'seconds'
		resolutionStrategy.cacheDynamicVersionsFor 1, 'seconds'
	}
}

dependencies {
	libLoader "com.eclipsesource.minimal-json:minimal-json:0.9.4"
	libLoader "org.minimallycorrect.modpatcher:ModPatcher:$mcVersion-SNAPSHOT"
	compileOnly 'org.projectlombok:lombok:1.16.16'
	testCompileOnly 'org.projectlombok:lombok:1.16.16'
	testCompile 'junit:junit:4.12'
}

tasks.withType(JavaCompile) {
	sourceCompatibility = 8
	targetCompatibility = 8
	options.with {
		encoding = 'UTF-8'
		compilerArgs << "-Xlint:all" << '-Xlint:-path' << '-Xlint:-processing' << '-Xlint:-rawtypes' << '-Xlint:-serial'
	}
}

minecraft {
	version = "${project.mcVersion}-${project.forgeVersion}"
	runDir = "run"
	mappings = project.forgeMappings

	replace "@MOD_VERSION@", project.version
	replace "@MC_VERSION@", runMcVersion
}

processResources {
	// this will ensure that this task is redone when the versions change.
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	filesMatching("mcmod.info") {
		expand 'version': project.version, 'mcversion': runMcVersion
	}
	filesMatching("modpatcher.version") {
		expand 'version': project.version
	}
}

jar {
	manifest.mainAttributes("FMLCorePlugin": "org.minimallycorrect.tickprofiler.minecraft.CoreMod", "FMLCorePluginContainsFMLMod": "YasPlease")
}

wrapper {
	gradleVersion = "3.5"
	def jvmOpts = "-Xmx2G"
	inputs.property("jvmOpts", jvmOpts)
	doLast {
		def optsEnvVar = "DEFAULT_JVM_OPTS"
		scriptFile.write scriptFile.text.replace("$optsEnvVar=\"\"", "$optsEnvVar=\"$jvmOpts\"")
		batchScript.write batchScript.text.replace("set $optsEnvVar=", "set $optsEnvVar=$jvmOpts")
	}
}
